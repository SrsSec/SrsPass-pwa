if(!self.define){const e=e=>{"require"!==e&&(e+=".js");let r=Promise.resolve();return n[e]||(r=new Promise(async r=>{if("document"in self){const n=document.createElement("script");n.src=e,document.head.appendChild(n),n.onload=r}else importScripts(e),r()})),r.then(()=>{if(!n[e])throw new Error(`Module ${e} didnâ€™t register its module`);return n[e]})},r=(r,n)=>{Promise.all(r.map(e)).then(e=>n(1===e.length?e[0]:e))},n={require:Promise.resolve(r)};self.define=(r,s,t)=>{n[r]||(n[r]=Promise.resolve().then(()=>{let n={};const i={uri:location.origin+r.slice(1)};return Promise.all(s.map(r=>{switch(r){case"exports":return n;case"module":return i;default:return e(r)}})).then(e=>{const r=t(...e);return n.default||(n.default=r),n})}))}}define("./service-worker.js",["./workbox-3ec4d9f3"],(function(e){"use strict";e.skipWaiting(),e.clientsClaim(),e.precacheAndRoute([{url:"/argon2id.worker.js",revision:"13337"}],{}),e.registerRoute(/\.png$/,new e.CacheFirst,"GET"),e.registerRoute("/index.html",new e.CacheFirst,"GET"),e.registerRoute("/",new e.CacheFirst,"GET"),e.registerRoute("/bundle.js",new e.StaleWhileRevalidate,"GET"),e.registerRoute(/\.css$/,new e.StaleWhileRevalidate,"GET"),e.registerRoute(/\.js$/,new e.StaleWhileRevalidate,"GET")}));
